embed
<drac2>
A    = &ARGS&
a    = argparse(A)
ch   = character()
day  = 86400
text = ""

using(timeConverter='e84d5d89-2fc7-4a14-be7a-cd73f2657cee')
def timeCon(sec):
  t = load_json(timeConverter.StoD(sec))
  texts = ""
  for x,y in t.items():
    texts += f'''{x.title()}: {y}, '''
  return texts

settings = {"time":1,"wait":60,"limit":40}
last     = int(ch.get_cvar("lastWorkdays",0))
workdays = int(ch.get_cvar("Workdays",0))
if last == 0:
  last = int(time())

if settings['wait']:
  if int(time()-last) <= int(settings['wait']):
    err(f'''You must wait another {timeCon(int(settings['wait'])-(int(time())-last))}''')

ch.set_cvar("lastWorkdays",int(time()))
if ctx.guild:
  settings = load_yaml(get_svar("workdaysSettings", settings))
plusTime = min(((int(time()) * settings["time"]) - (int(last) * settings["time"])), (int(settings['limit'])*int(settings['time']*day)))

workdays = int(workdays+plusTime)
ch.set_cvar("Workdays",workdays)

text += f'''-title "Workdays Tracker: {name}" '''
text += f''' -desc "**Current Workdays:** {timeCon(int(workdays))}\n**Added Time:** {timeCon(int(plusTime))}"'''
text += f''' -f "Simplified Days: {{int(workdays)//(day*int(settings['time']))}}'''

return text
</drac2>